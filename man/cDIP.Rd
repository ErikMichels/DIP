% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cDIP.R
\name{cDIP}
\alias{cDIP}
\title{Predicts the continuous degree of host response dysregulation: continuous Dysregulated Immune Profile.}
\usage{
cDIP(new_data)
}
\arguments{
\item{new_data}{A data frame containing the following columns:
\itemize{
\item \code{ID}: unique Identifier for the observations. Patients with multiple timepoints should have the timepoint included in their ID.
\item \code{TREM_1}: sTREM-1 measured in picograms per milliliter (pg/ml). Data should be untransformed and unscaled. Exact naming required. It is crucial that the
column name is exactly \code{TREM_1} as the function's code explicitly references this name.
\item \code{IL_6}: IL-6  measured in picograms per milliliter (pg/ml). Data should be untransformed and unscaled. Exact naming required. It is crucial that the
column name is exactly \code{IL_6} as the function's code explicitly references this name.
\item \code{Procalcitonin}: Procalcitonin  measured in picograms per milliliter (pg/ml). Data should be untransformed and unscaled. Exact naming required. It is crucial that the
column name is exactly \code{Procalcitonin} as the function's code explicitly references this name.
}}
}
\description{
This function requires Python to be installed as it loads a complex trained Random Forest Regressor model.
The model predicts the degree of host response dysregulation on a continuous scale: the continuous Dysregulated Immune Profile or cDIP using plasma concentrations of sTREM-1, IL-6, and Procalcitonin.
The prediction model leverages absolute values to deliver precise, tailored outcomes, suitable for single-patient scenarios
The function automatically omits patients with missing classifier data
Outputs include the original  classifier data, the predicted cDIP, and a beeswarmplot
The continuous degree of host response dysregulation ranges from 0 (minor dysregulation) - 1 (major dysregulation)
}
\examples{
test_data <- data.frame(
  ID = 1:3,
  TREM_1 = c(182, 400, 1000),
  IL_6 = c(70, 5, 10000),
  Procalcitonin = c(877, 66, 20000)
)
result <- DIP_stage(test_data)
print(result)
}
